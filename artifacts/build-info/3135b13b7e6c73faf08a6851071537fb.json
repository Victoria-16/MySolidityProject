{
	"id": "3135b13b7e6c73faf08a6851071537fb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"greatness.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\ncontract  Zinny{\r\n    address public  Owner;\r\n    constructor () {\r\n        Owner = msg.sender;\r\n\r\n    }\r\n    modifier onlyOwner(){\r\n        require(msg.sender == Owner, \"You are not the owner big head\");\r\n       _; \r\n    \r\n    }\r\n    function setOwner(address _newOwner) public onlyOwner{\r\n        require(_newOwner != address(0) , \"invalid address \");\r\n     Owner = _newOwner;\r\n    }\r\n\r\n    function anyonecancall() public {}\r\n\r\n\r\n\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"greatness.sol": {
				"Zinny": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "anyonecancall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"greatness.sol\":58:494  contract  Zinny{... */\n  mstore(0x40, 0x80)\n    /* \"greatness.sol\":108:162  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"greatness.sol\":134:139  Owner */\n  0x00\n    /* \"greatness.sol\":134:152  Owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"greatness.sol\":142:152  msg.sender */\n  caller\n    /* \"greatness.sol\":134:152  Owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"greatness.sol\":58:494  contract  Zinny{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"greatness.sol\":58:494  contract  Zinny{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x13af4035\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x25ec5847\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"greatness.sol\":293:443  function setOwner(address _newOwner) public onlyOwner{... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"greatness.sol\":80:101  address public  Owner */\n    tag_5:\n      sload(0x00)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"greatness.sol\":80:101  address public  Owner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"greatness.sol\":293:443  function setOwner(address _newOwner) public onlyOwner{... */\n    tag_9:\n        /* \"greatness.sol\":221:226  Owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"greatness.sol\":207:217  msg.sender */\n      caller\n        /* \"greatness.sol\":207:226  msg.sender == Owner */\n      eq\n        /* \"greatness.sol\":199:261  require(msg.sender == Owner, \"You are not the owner big head\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"greatness.sol\":199:261  require(msg.sender == Owner, \"You are not the owner big head\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x1e\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:825   */\n      0x596f7520617265206e6f7420746865206f776e65722062696720686561640000\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:826   */\n      mstore\n        /* \"#utility.yul\":843:861   */\n      0x64\n      add\n        /* \"greatness.sol\":199:261  require(msg.sender == Owner, \"You are not the owner big head\") */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"greatness.sol\":365:388  _newOwner != address(0) */\n      dup2\n      and\n        /* \"greatness.sol\":357:410  require(_newOwner != address(0) , \"invalid address \") */\n      tag_21\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"greatness.sol\":357:410  require(_newOwner != address(0) , \"invalid address \") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1056:1077   */\n      mstore\n        /* \"#utility.yul\":1113:1115   */\n      0x10\n        /* \"#utility.yul\":1093:1111   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1086:1116   */\n      mstore\n      shl(0x85, 0x034b73b30b634b21030b2323932b9b99)\n        /* \"#utility.yul\":1132:1150   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1125:1171   */\n      mstore\n        /* \"#utility.yul\":1188:1206   */\n      0x64\n      add\n        /* \"greatness.sol\":357:410  require(_newOwner != address(0) , \"invalid address \") */\n      tag_18\n        /* \"#utility.yul\":872:1212   */\n      jump\n        /* \"greatness.sol\":357:410  require(_newOwner != address(0) , \"invalid address \") */\n    tag_21:\n        /* \"greatness.sol\":418:423  Owner */\n      0x00\n        /* \"greatness.sol\":418:435  Owner = _newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"greatness.sol\":293:443  function setOwner(address _newOwner) public onlyOwner{... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_8:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_27:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_28:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a604088e94ce4b50116c7a9fe1155022a7602708ea7cb08823a1afbec583c9d264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b505f80546001600160a01b031916331790556101b18061002e5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806313af40351461004357806325ec584714610056578063b4a99a4e14610058575b5f80fd5b61005661005136600461014e565b610086565b005b5f5461006a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f546001600160a01b031633146100e45760405162461bcd60e51b815260206004820152601e60248201527f596f7520617265206e6f7420746865206f776e6572206269672068656164000060448201526064015b60405180910390fd5b6001600160a01b03811661012d5760405162461bcd60e51b815260206004820152601060248201526f034b73b30b634b21030b2323932b9b9960851b60448201526064016100db565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b5f6020828403121561015e575f80fd5b81356001600160a01b0381168114610174575f80fd5b939250505056fea2646970667358221220a604088e94ce4b50116c7a9fe1155022a7602708ea7cb08823a1afbec583c9d264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1B1 DUP1 PUSH2 0x2E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x25EC5847 EQ PUSH2 0x56 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x58 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x14E JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x6A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E65722062696720686561640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x34B73B30B634B21030B2323932B9B99 PUSH1 0x85 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 DIV ADDMOD DUP15 SWAP5 0xCE 0x4B POP GT PUSH13 0x7A9FE1155022A7602708EA7CB0 DUP9 0x23 LOG1 0xAF 0xBE 0xC5 DUP4 0xC9 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "58:436:0:-:0;;;108:54;;;;;;;;;-1:-1:-1;134:5:0;:18;;-1:-1:-1;;;;;;134:18:0;142:10;134:18;;;58:436;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Owner_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@anyonecancall_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOwner_46": {
									"entryPoint": 134,
									"id": 46,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2420cadbd684ddc528fed71ccd9096c38247c22c88046270a2a3b18cd1c89343__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c051f535c45435fb8ef5c9ba380b6a5a5d8de69333845b87d9f32ced95e3e1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1214:1",
										"nodeType": "YulBlock",
										"src": "0:1214:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:1",
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nativeSrc": "168:23:1",
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:1",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:1",
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:1",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:1",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nativeSrc": "256:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nativeSrc": "256:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:1",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:1",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nativeSrc": "235:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:1",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nativeSrc": "231:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nativeSrc": "220:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nativeSrc": "210:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nativeSrc": "203:50:1",
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nativeSrc": "200:70:1",
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nativeSrc": "279:15:1",
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:1",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nativeSrc": "406:102:1",
													"nodeType": "YulBlock",
													"src": "406:102:1",
													"statements": [
														{
															"nativeSrc": "416:26:1",
															"nodeType": "YulAssignment",
															"src": "416:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "428:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "439:2:1",
																		"nodeType": "YulLiteral",
																		"src": "439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "424:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:1"
																},
																"nativeSrc": "424:18:1",
																"nodeType": "YulFunctionCall",
																"src": "424:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "416:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "458:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "473:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "489:3:1",
																								"nodeType": "YulLiteral",
																								"src": "489:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "494:1:1",
																								"nodeType": "YulLiteral",
																								"src": "494:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "485:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:1"
																						},
																						"nativeSrc": "485:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "498:1:1",
																						"nodeType": "YulLiteral",
																						"src": "498:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "481:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:1"
																				},
																				"nativeSrc": "481:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "469:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:1"
																		},
																		"nativeSrc": "469:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "451:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																},
																"nativeSrc": "451:51:1",
																"nodeType": "YulFunctionCall",
																"src": "451:51:1"
															},
															"nativeSrc": "451:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "451:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "305:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "375:9:1",
														"nodeType": "YulTypedName",
														"src": "375:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "386:6:1",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "397:4:1",
														"nodeType": "YulTypedName",
														"src": "397:4:1",
														"type": ""
													}
												],
												"src": "305:203:1"
											},
											{
												"body": {
													"nativeSrc": "687:180:1",
													"nodeType": "YulBlock",
													"src": "687:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "704:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "715:2:1",
																		"nodeType": "YulLiteral",
																		"src": "715:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "697:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																},
																"nativeSrc": "697:21:1",
																"nodeType": "YulFunctionCall",
																"src": "697:21:1"
															},
															"nativeSrc": "697:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "697:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "738:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "749:2:1",
																				"nodeType": "YulLiteral",
																				"src": "749:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "734:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:1"
																		},
																		"nativeSrc": "734:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "754:2:1",
																		"nodeType": "YulLiteral",
																		"src": "754:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "727:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:1"
																},
																"nativeSrc": "727:30:1",
																"nodeType": "YulFunctionCall",
																"src": "727:30:1"
															},
															"nativeSrc": "727:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "727:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "777:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "788:2:1",
																				"nodeType": "YulLiteral",
																				"src": "788:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:1"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206269672068656164",
																		"kind": "string",
																		"nativeSrc": "793:32:1",
																		"nodeType": "YulLiteral",
																		"src": "793:32:1",
																		"type": "",
																		"value": "You are not the owner big head"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "766:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:1"
																},
																"nativeSrc": "766:60:1",
																"nodeType": "YulFunctionCall",
																"src": "766:60:1"
															},
															"nativeSrc": "766:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "766:60:1"
														},
														{
															"nativeSrc": "835:26:1",
															"nodeType": "YulAssignment",
															"src": "835:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "847:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "847:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "858:2:1",
																		"nodeType": "YulLiteral",
																		"src": "858:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "843:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:1"
																},
																"nativeSrc": "843:18:1",
																"nodeType": "YulFunctionCall",
																"src": "843:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "835:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "835:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c051f535c45435fb8ef5c9ba380b6a5a5d8de69333845b87d9f32ced95e3e1f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "513:354:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "664:9:1",
														"nodeType": "YulTypedName",
														"src": "664:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "678:4:1",
														"nodeType": "YulTypedName",
														"src": "678:4:1",
														"type": ""
													}
												],
												"src": "513:354:1"
											},
											{
												"body": {
													"nativeSrc": "1046:166:1",
													"nodeType": "YulBlock",
													"src": "1046:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1056:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:1"
																},
																"nativeSrc": "1056:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1056:21:1"
															},
															"nativeSrc": "1056:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1056:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1097:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1097:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1108:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1108:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1093:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1093:3:1"
																		},
																		"nativeSrc": "1093:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1093:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1113:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1113:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1086:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1086:6:1"
																},
																"nativeSrc": "1086:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1086:30:1"
															},
															"nativeSrc": "1086:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1086:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1136:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1136:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1147:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1147:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1132:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1132:3:1"
																		},
																		"nativeSrc": "1132:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:18:1"
																	},
																	{
																		"hexValue": "696e76616c6964206164647265737320",
																		"kind": "string",
																		"nativeSrc": "1152:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1152:18:1",
																		"type": "",
																		"value": "invalid address "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1125:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1125:6:1"
																},
																"nativeSrc": "1125:46:1",
																"nodeType": "YulFunctionCall",
																"src": "1125:46:1"
															},
															"nativeSrc": "1125:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "1125:46:1"
														},
														{
															"nativeSrc": "1180:26:1",
															"nodeType": "YulAssignment",
															"src": "1180:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1192:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1192:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1203:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1188:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1188:3:1"
																},
																"nativeSrc": "1188:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1188:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1180:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1180:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2420cadbd684ddc528fed71ccd9096c38247c22c88046270a2a3b18cd1c89343__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "872:340:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1023:9:1",
														"nodeType": "YulTypedName",
														"src": "1023:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1037:4:1",
														"nodeType": "YulTypedName",
														"src": "1037:4:1",
														"type": ""
													}
												],
												"src": "872:340:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_8c051f535c45435fb8ef5c9ba380b6a5a5d8de69333845b87d9f32ced95e3e1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"You are not the owner big head\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2420cadbd684ddc528fed71ccd9096c38247c22c88046270a2a3b18cd1c89343__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"invalid address \")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806313af40351461004357806325ec584714610056578063b4a99a4e14610058575b5f80fd5b61005661005136600461014e565b610086565b005b5f5461006a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f546001600160a01b031633146100e45760405162461bcd60e51b815260206004820152601e60248201527f596f7520617265206e6f7420746865206f776e6572206269672068656164000060448201526064015b60405180910390fd5b6001600160a01b03811661012d5760405162461bcd60e51b815260206004820152601060248201526f034b73b30b634b21030b2323932b9b9960851b60448201526064016100db565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b5f6020828403121561015e575f80fd5b81356001600160a01b0381168114610174575f80fd5b939250505056fea2646970667358221220a604088e94ce4b50116c7a9fe1155022a7602708ea7cb08823a1afbec583c9d264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x25EC5847 EQ PUSH2 0x56 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x58 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x14E JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x6A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E65722062696720686561640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x34B73B30B634B21030B2323932B9B99 PUSH1 0x85 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 DIV ADDMOD DUP15 SWAP5 0xCE 0x4B POP GT PUSH13 0x7A9FE1155022A7602708EA7CB0 DUP9 0x23 LOG1 0xAF 0xBE 0xC5 DUP4 0xC9 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "58:436:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:150;;;;;;:::i;:::-;;:::i;:::-;;80:21;;;;;-1:-1:-1;;;;;80:21:0;;;;;;-1:-1:-1;;;;;469:32:1;;;451:51;;439:2;424:18;80:21:0;;;;;;;293:150;221:5;;-1:-1:-1;;;;;221:5:0;207:10;:19;199:62;;;;-1:-1:-1;;;199:62:0;;715:2:1;199:62:0;;;697:21:1;754:2;734:18;;;727:30;793:32;773:18;;;766:60;843:18;;199:62:0;;;;;;;;;-1:-1:-1;;;;;365:23:0;::::1;357:53;;;::::0;-1:-1:-1;;;357:53:0;;1074:2:1;357:53:0::1;::::0;::::1;1056:21:1::0;1113:2;1093:18;;;1086:30;-1:-1:-1;;;1132:18:1;;;1125:46;1188:18;;357:53:0::1;872:340:1::0;357:53:0::1;418:5;:17:::0;;-1:-1:-1;;;;;;418:17:0::1;-1:-1:-1::0;;;;;418:17:0;;;::::1;::::0;;;::::1;::::0;;293:150::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "86600",
								"executionCost": "24367",
								"totalCost": "110967"
							},
							"external": {
								"Owner()": "2345",
								"anyonecancall()": "119",
								"setOwner(address)": "26685"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 494,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 162,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 162,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 108,
									"end": 162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 162,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 108,
									"end": 162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 162,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 108,
									"end": 162,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 134,
									"end": 139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 134,
									"end": 152,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 142,
									"end": 152,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 152,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 494,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 494,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 494,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 494,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 494,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a604088e94ce4b50116c7a9fe1155022a7602708ea7cb08823a1afbec583c9d264736f6c63430008160033",
									".code": [
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "13AF4035"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "25EC5847"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "B4A99A4E"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 293,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 293,
											"end": 443,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 293,
											"end": 443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 293,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 293,
											"end": 443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 293,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 80,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 80,
											"end": 101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 80,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 101,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 293,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 221,
											"end": 226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 207,
											"end": 217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 199,
											"end": 261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 199,
											"end": 261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 199,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 261,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 793,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520617265206E6F7420746865206F776E65722062696720686561640000"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 199,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 199,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 199,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 199,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 365,
											"end": 388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 357,
											"end": 410,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 357,
											"end": 410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 357,
											"end": 410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1056,
											"end": 1077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1115,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B73B30B634B21030B2323932B9B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 872,
											"end": 1212,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 357,
											"end": 410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 418,
											"end": 435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 435,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"greatness.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Owner()": "b4a99a4e",
							"anyonecancall()": "25ec5847",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"anyonecancall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"greatness.sol\":\"Zinny\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"greatness.sol\":{\"keccak256\":\"0x14b525eac9ea9c3a700df8e3345ceb45fd86fcf4c4f09d94e2b0ded177fac253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b39b03cbe124f3d8537dfaaf657dbfb0568b6ce8f57347274513f70e3fea748f\",\"dweb:/ipfs/QmcevKzHf2CYmrGU1b9QrhvvJsz8Uxc3QSYkjRE324BAjy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "greatness.sol:Zinny",
								"label": "Owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"greatness.sol": {
				"ast": {
					"absolutePath": "greatness.sol",
					"exportedSymbols": {
						"Zinny": [
							51
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Zinny",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 51,
							"linearizedBaseContracts": [
								51
							],
							"name": "Zinny",
							"nameLocation": "68:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 3,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "96:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "80:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "123:39:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "134:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "142:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "146:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "142:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "134:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "134:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "120:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "123:0:0"
									},
									"scope": 51,
									"src": "108:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "188:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "207:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "211:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "207:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "Owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "221:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "207:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206269672068656164",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "228:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c051f535c45435fb8ef5c9ba380b6a5a5d8de69333845b87d9f32ced95e3e1f",
																"typeString": "literal_string \"You are not the owner big head\""
															},
															"value": "You are not the owner big head"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c051f535c45435fb8ef5c9ba380b6a5a5d8de69333845b87d9f32ced95e3e1f",
																"typeString": "literal_string \"You are not the owner big head\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "199:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "199:62:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "271:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "177:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"src": "168:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "346:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 32,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "365:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "386:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "378:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 33,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "378:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "378:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "365:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206164647265737320",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "391:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2420cadbd684ddc528fed71ccd9096c38247c22c88046270a2a3b18cd1c89343",
																"typeString": "literal_string \"invalid address \""
															},
															"value": "invalid address "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2420cadbd684ddc528fed71ccd9096c38247c22c88046270a2a3b18cd1c89343",
																"typeString": "literal_string \"invalid address \""
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "357:53:0"
											},
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "418:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 42,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "426:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "418:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "418:17:0"
											}
										]
									},
									"functionSelector": "13af4035",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyOwner",
												"nameLocations": [
													"337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "337:9:0"
										}
									],
									"name": "setOwner",
									"nameLocation": "302:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "319:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "311:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:19:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:0"
									},
									"scope": 51,
									"src": "293:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "483:2:0",
										"statements": []
									},
									"functionSelector": "25ec5847",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "anyonecancall",
									"nameLocation": "460:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:0:0"
									},
									"scope": 51,
									"src": "451:34:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 52,
							"src": "58:436:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:461:0"
				},
				"id": 0
			}
		}
	}
}